' {$STAMP BS2}
' {$PBASIC 2.5}

Setup:
  MorseButton PIN 0

  INPUT MorseButton

  MorseCodes DATA %10, %111, %101, %11, %1, %1101, %1, %1111, %11, %1000, %10, %1011, %0, %1, %0, %1001, %10, %101, %111, %0, %110, %1110, %100, %110, %100, %11
  MorseSize DATA    2,    4,    4,   3,  1,     4,  3,     4,   2,     4,   3,     4,  2,  2,  3,     4,   4,    3,    3,  1,    3,     4,    3,    4,    4,   4
  MorseCharOffset CON 65

  MAXINT CON 65535

MORSECODE:
  DEBUG "Starting Morse Code Decoder", CR

  state VAR Nib
  state = 0

  signalLength VAR Word
  signalLength = 0

  idx VAR Byte
  readCode VAR Byte
  readSize VAR Byte

  timeBtwnSignal VAR Word
  timeBtwnSignal = 0

  character VAR Byte
  charSize VAR Nib

  DO
    IF state = 0 THEN ' Initialize
      DEBUG "state = 0", CR
      character = 0
      charSize = 0
      DO WHILE MorseButton = 0
      LOOP
      state = 1
    ELSEIF state = 1 THEN ' Wait for high button
      DEBUG "state = 1", CR
      signalLength = 0
      timeBtwnSignal = 0
      DO WHILE MorseButton = 1
        PAUSE 1
        signalLength = signalLength + 1
      LOOP
      state = 2
    ELSEIF state = 2 THEN ' Calculate dot or dash
      DEBUG "state = 2", CR
      IF signalLength > 5 THEN
        IF signalLength > 700 THEN ' Dash
          character = character << 1
          DEBUG "Got dash", CR
        ELSE ' Dot
          character = character << 1
          character = character + 1
          DEBUG "Got dot", CR
        ENDIF
        charSize = charSize + 1
        state = 3
      ELSE
        state = 0
      ENDIF
    ELSEIF state = 3 THEN ' Wait for start of next signal, if too late decode letter
      DEBUG "state = 3", CR
      DO
        PAUSE 1
        timeBtwnSignal = timeBtwnSignal + 1
      LOOP UNTIL MorseButton = 1

      IF timeBtwnSignal > 1000 THEN ' End of letter
        FOR idx = 0 TO 36
          IF idx = 36 THEN
             DEBUG "no char found: "
             DEBUG BIN character, " size: "
             DEBUG DEC charSize, CR
          ELSE
             READ (MorseCodes + idx), readCode
             READ (MorseSize + idx), readSize
             IF (character = readCode) AND (charSize = readSize) THEN
                DEBUG "idx: "
                DEBUG DEC idx
                DEBUG " raw: "
                DEBUG BIN character, " size: "
                DEBUG DEC charSize, " ascii: "
                DEBUG MorseCharOffset + idx, CR
                GOTO BREAK1
             ENDIF
          ENDIF
        NEXT
        BREAK1:
        state = 0
      ELSE
        state = 1
      ENDIF
    ENDIF
  LOOP